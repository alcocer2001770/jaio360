<ui:composition xmlns="http://www.w3.org/1999/xhtml"
                xmlns:ui="http://java.sun.com/jsf/facelets"
                xmlns:h="http://java.sun.com/jsf/html"
                xmlns:f="http://java.sun.com/jsf/core"
                xmlns:p="http://primefaces.org/ui"
                template="../templates/ui.xhtml">

    <ui:define name="head">
        <style type="text/css">
            .ui-panel, div.ui-state-hover {
                margin: 10px;
                width:200px;
            }

            .ui-dashboard-column {
                width:220px;
            }
        </style>

    </ui:define>

    <ui:define name="content">
        <h1 class="title ui-widget-header ui-corner-all">Nombre del proyecto de evaluacion-prueba</h1>
        <div class="entry">

            <!--            <p>Dashboard is a layout component featuring dragdrop based content reordering similar to portal environments. As a stateful component, dashboard is backed
                            by a DashboardModel API which is used to save the state of the UI.</p>-->

            <h:form id="form">

                <p:dashboard id="board" model="#{dashboardBean.model}">
                    <p:ajax event="reorder" listener="#{dashboardBean.handleReorder}" update="growl" />


                    <p:panel id="sports" header="Cuestionario 1">
                        <h:outputText value="Cuestionario 1" />
                        <p:multiSelectListbox value="#{multiSelectListboxBean.selection}" effect="slide">
                            <f:selectItems value="#{multiSelectListboxBean.categories}" />
                        </p:multiSelectListbox>

                        <p:commandButton value="Save" icon="ui-icon-check" update="out" style="margin:10px 0"/>

                        <h:outputText id="out" value="Value: #{multiSelectListboxBean.selection}" style="display:block"/>
                    </p:panel>

                    <p:panel id="finance" header="Cuestionario 2">
                        <h:outputText value="Cuestionario 2" />
                    </p:panel>

                    <p:panel id="lifestyle" header="Cuestionario 3">
                        <h:outputText value="Cuestionario 3"  />
                    </p:panel>

                    <p:panel id="weather" header="Cuestionario 4">
                        <h:outputText value="Cuestionario 4" />
                    </p:panel>

                    <p:panel id="politics" header="Cuestionario 5">
                        <h:outputText value="Cuestionario 5" />
                    </p:panel>

                    <!--<h3>PickList on Steroids: Pojo Support with Effect, Captions, Custom Content, Reordering, Filtering, Checkboxes and Ajax Transfer</h3>-->

                </p:dashboard>
                <p:growl id="growl" showDetail="true" />

                <!--<div style="clear:both" />-->
                <h:outputText value="Respuestas" />
                <p:selectManyMenu id="scroll2" value="#{autoCompleteBean.selectedRespuestas}" converter="respuesta" style="width:150px;height:200px" var="p" showCheckbox="true">
                    <f:selectItems value="#{autoCompleteBean.respuestas}" var="respuesta" itemLabel="#{respuesta.name}" itemValue="#{respuesta}" />

                    <p:column>
                        <p:graphicImage value="/images/barca/#{p.photo}" width="40"/>
                    </p:column>

                    <p:column>
                        #{p.name} - #{p.number}
                    </p:column>
                </p:selectManyMenu>

                <div style="clear:both" />
                <p:panel id="histobiblio" header="Biblioteca de preguntas">
                <h:outputText value="Biblioteca de preguntas" />
                            
                <p:multiSelectListbox value="#{multiSelectListboxBean.selection}" effect="slide" >
                    <f:selectItems value="#{multiSelectListboxBean.categories}" />
                </p:multiSelectListbox>

                <p:commandButton value="Save1" icon="ui-icon-check" update="out1" style="margin:10px 0"/>

                <h:outputText id="out1" value="Value: #{multiSelectListboxBean.selection}" style="display:block"/>
                </p:panel>
                      

            </h:form>

            <h3 style="clear:both;">Source</h3>

            <p:tabView>
                <p:tab title="dashboard.xhtml">
                    <pre name="code" class="xml">
&lt;h:form id="form"&gt;

    &lt;p:growl id="growl" showDetail="true" /&gt;

    &lt;p:dashboard id="board" model="\#{dashboardBean.model}"&gt;
        &lt;p:ajax event="reorder" listener="\#{dashboardBean.handleReorder}" update="growl" /&gt;

        &lt;p:panel id="sports" header="Sports"&gt;
            &lt;h:outputText value="Sports Content" /&gt;
        &lt;/p:panel&gt;

        &lt;p:panel id="finance" header="Finance"&gt;
            &lt;h:outputText value="Finance Content" /&gt;
        &lt;/p:panel&gt;

        &lt;p:panel id="lifestyle" header="Lifestyle"&gt;
            &lt;h:outputText value="Lifestyle Content"  /&gt;
        &lt;/p:panel&gt;

        &lt;p:panel id="weather" header="Weather"&gt;
            &lt;h:outputText value="Weather Content" /&gt;
        &lt;/p:panel&gt;

        &lt;p:panel id="politics" header="Politics"&gt;
            &lt;h:outputText value="Politics Content" /&gt;
        &lt;/p:panel&gt;
    &lt;/p:dashboard&gt;

&lt;/h:form&gt;
                    </pre>
                </p:tab>

                <p:tab title="DashboardBean.java">
                    <pre name="code" class="java">
public class DashboardBean implements Serializable {

	private DashboardModel model;
	
	public DashboardBean() {
		model = new DefaultDashboardModel();
		DashboardColumn column1 = new DefaultDashboardColumn();
		DashboardColumn column2 = new DefaultDashboardColumn();
		DashboardColumn column3 = new DefaultDashboardColumn();
		
		column1.addWidget("sports");
		column1.addWidget("finance");
		
		column2.addWidget("lifestyle");
		column2.addWidget("weather");
		
		column3.addWidget("politics");

		model.addColumn(column1);
		model.addColumn(column2);
		model.addColumn(column3);
	}
	
	public void handleReorder(DashboardReorderEvent event) {
		FacesMessage message = new FacesMessage();
		message.setSeverity(FacesMessage.SEVERITY_INFO);
		message.setSummary("Reordered: " + event.getWidgetId());
		message.setDetail("Item index: " + event.getItemIndex() + ", Column index: " + event.getColumnIndex() + ", Sender index: " + event.getSenderColumnIndex());
		
		addMessage(message);
	}
	
	
	private void addMessage(FacesMessage message) {
		FacesContext.getCurrentInstance().addMessage(null, message);
	}
	
	public DashboardModel getModel() {
		return model;
	}
}
                    </pre>
                </p:tab>


            </p:tabView>


        </div>

    </ui:define>
</ui:composition>
